/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    long max = Long.MIN_VALUE;
    public boolean isValidBST(TreeNode root){
        if(root!=null){
            if(!isValidBST(root.left)) return false;
            if(max>=root.val) return false;
            max = root.val;
            return isValidBST(root.right);
        }
        return true;
    }
}
/*
class Solution {
    public TreeNode below=null;
    public boolean isValidBST(TreeNode root) {
        return checkBST(root,Long.MIN_VALUE,Long.MAX_VALUE);
    }
    public boolean checkBST(TreeNode root,long min,long max){
        if(root==null) return true;
        if(root.val>=max || root.val<=min) return false;
        return checkBST(root.left,min,root.val) && checkBST(root.right,root.val,max);
    }
}
*/
